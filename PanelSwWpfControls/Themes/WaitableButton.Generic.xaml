<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:PanelSW.WPF.Controls">

    <Style x:Key="{x:Static local:ResourceKeys.WaitableButtonProgressBarStyleKey}">
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="Control.Margin" Value="0,0,0,0"/>
        <Setter Property="Control.Padding" Value="0,0,0,0"/>
        <Setter Property="Control.Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width}"/>
        <Setter Property="Control.Height" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height}"/>
    </Style>

    <Style x:Key="{x:Static local:ResourceKeys.WaitableButtonButtonStyleKey}">
        <Setter Property="Button.Content" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"/>
        <Setter Property="Button.Command" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Command}"/>
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="Control.Margin" Value="0,0,0,0"/>
        <Setter Property="Control.Padding" Value="0,0,0,0"/>
        <Setter Property="Control.Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width}"/>
        <Setter Property="Control.Height" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height}"/>
        <Setter Property="Control.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}"/>
        <Setter Property="Control.Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"/>
        <Setter Property="Control.FontFamily" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontFamily}"/>
        <Setter Property="Control.FontSize" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontSize}"/>
        <Setter Property="Control.FontStretch" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontStretch}"/>
        <Setter Property="Control.FontStyle" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontStyle}"/>
        <Setter Property="Control.FontWeight" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontWeight}"/>
    </Style>

    <Style x:Key="{x:Static local:ResourceKeys.WaitableButtonBorderStyleKey}">
        <Setter Property="Border.BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness}"/>
        <Setter Property="Border.BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}"/>
        <Setter Property="Border.CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CornerRadius}"/>
        <Setter Property="Control.Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"/>
    </Style>

    <Style x:Key="{x:Static local:ResourceKeys.WaitableButtonBlinkingStyleKey}" TargetType="local:WaitableButton" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:WaitableButton">
                    <Button Style="{DynamicResource {x:Static local:ResourceKeys.WaitableButtonButtonStyleKey}}" Foreground="{TemplateBinding Foreground}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="ValueStates">
                                <VisualState Name="Ready"/>
                                <VisualState Name="Waiting">
                                    <Storyboard>
                                        <ColorAnimation To="Transparent" Duration="0:0:0.5" Storyboard.TargetProperty="(Foreground).(Color)" RepeatBehavior="Forever"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Button>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:WaitableButton" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:WaitableButton}">
                    <Border Style="{DynamicResource {x:Static local:ResourceKeys.WaitableButtonBorderStyleKey}}" Focusable="False">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="ValueStates">
                                <VisualState Name="Ready"/>
                                <VisualState Name="Waiting"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid Focusable="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Button Grid.Row="0" Grid.Column="0" Name="PART_Button" Style="{DynamicResource {x:Static local:ResourceKeys.WaitableButtonButtonStyleKey}}"
                                    Command="{TemplateBinding Command}" Content="{TemplateBinding Content}"/>
                            <ProgressBar Grid.Row="0" Grid.Column="0" Name="PART_Waiting" Visibility="Collapsed" Style="{DynamicResource {x:Static local:ResourceKeys.WaitableButtonProgressBarStyleKey}}" IsIndeterminate="True" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>